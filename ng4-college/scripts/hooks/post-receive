#!/bin/bash
set -e

APP_NAME=cf-college
PORT=8003
ENV=test
HOST=test.college.careerfrog.com.cn
REPLICAS=2

NETWORK=traefik_gateway
WORK_TREE=../../run/$APP_NAME
DOCKER_REGISTERY=registry-internal.cn-shanghai.aliyuncs.com/cf-docker
SERVICE="${APP_NAME}_${APP_NAME}"

while read oldrev newrev ref
do

    echo "ref $ref received.  Deploying to $HOSTNAME... "

    VERSION=$(echo $ref| cut -d'/' -f 3)

    echo "VERSION: $VERSION "

    mkdir -p $WORK_TREE
    git --work-tree=$WORK_TREE --git-dir=$GIT_DIR checkout -f $ref
    cd $WORK_TREE

    echo "{\"version\": \"$VERSION\"}" > .version.json

    IMG_LOCAL="cf-docker/$APP_NAME:$VERSION"
    IMAGE=$DOCKER_REGISTERY/$APP_NAME:$VERSION

    echo "start building $IMG_LOCAL $IMAGE... "
    docker build -t $IMG_LOCAL .
    echo "image built successfully: $IMG_LOCAL... "

    docker tag $IMG_LOCAL $IMAGE

    echo "mstart pushing $IMAGE... "
    docker push $IMAGE
    echo "image pushed successfully: $IMAGE... "

    echo "ENV=$ENV APP_NAME=$APP_NAME VERSION=$VERSION IMAGE=$IMAGE PORT=$PORT NETWORK=$NETWORK HOST=$HOST REPLICAS=$REPLICAS" > .env

    echo "start deploy app... "
    if [[ "$(docker service ls | grep $SERVICE | wc -l)" == '1' ]]; then
      echo "updating service $SERVICE... "
      ./scripts/run/update_service.sh
    else
      echo "initializing service $SERVICE... "
      ./scripts/run/start_service.sh
      sleep 2
      docker service update --replicas=$REPLICAS $SERVICE
    fi

    echo "
    ============================
    deploy complete: $SERVICE...
    ============================
    "
done
